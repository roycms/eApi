{
    "version": 3,
    "sources": [
        "../../../src/controller/api/v1.js"
    ],
    "names": [
        "Base",
        "require",
        "request",
        "fs",
        "ALY",
        "ossStream",
        "OSS",
        "accessKeyId",
        "secretAccessKey",
        "endpoint",
        "apiVersion",
        "module",
        "exports",
        "indexAction",
        "json",
        "code",
        "loginAction",
        "username",
        "post",
        "password",
        "undefined",
        "fail",
        "passwordMd5Val",
        "think",
        "md5",
        "user",
        "model",
        "data",
        "where",
        "find",
        "JSON",
        "stringify",
        "session",
        "success",
        "userAction",
        "isPut",
        "isMethod",
        "isPost",
        "isDelete",
        "id",
        "get",
        "rows",
        "update",
        "affectedRows",
        "isUser",
        "add",
        "delete",
        "upfileAction",
        "file",
        "filePath",
        "uuid",
        "upload",
        "Bucket",
        "Key",
        "read",
        "createReadStream",
        "path",
        "pipe",
        "_this",
        "p",
        "Promise",
        "resolve",
        "reject",
        "on",
        "details",
        "console",
        "log",
        "then",
        "error",
        "evaluationAction",
        "isGet",
        "rows2",
        "question_id",
        "select",
        "questionAction",
        "optionsAction",
        "answerAction",
        "task_flowsAction",
        "user_id",
        "user_answerAction",
        "user_answersAction",
        "addMany",
        "openid",
        "appid",
        "secret",
        "url",
        "response",
        "body",
        "statusCode",
        "rt",
        "parse",
        "wxloginAction",
        "js_code",
        "wid"
    ],
    "mappings": "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",
    "file": "../../../src/controller/api/v1.js",
    "sourcesContent": [
        "const Base = require('../base.js');\n//网络请求模块\nvar request = require('request');\n//阿里云\nvar fs = require(\"fs\");\nvar ALY = require('aliyun-sdk');\nvar ossStream = require('aliyun-oss-upload-stream')(new ALY.OSS({\n  accessKeyId: 'yIgRvLsyxFB3JEJH',\n  secretAccessKey: 'X7wyFWIw76cLb4cLNDa8Z2YNmHtIOu',\n  endpoint: 'http://oss-cn-beijing.aliyuncs.com',\n  apiVersion: '2013-10-15'\n}));\n\n\nmodule.exports = class extends Base {\n\n  indexAction() {\n    return this.json({code:200});\n  }\n  //登录\n  async loginAction() {\n     const username = this.post('username');\n     const password = this.post('password');\n     if (username == undefined || password == undefined) {\n       return this.fail(300, \"参数错误\");\n     }\n     const passwordMd5Val = think.md5(password);\n     const user = this.model('user');\n     const data = await user.where({\n       username: username,\n       password: passwordMd5Val\n     }).find();\n     // this.json(data)\n     if (JSON.stringify(data) == \"{}\"){\n        await this.session('sessionKey', null);\n        return this.fail(300, \"账户名或者密码错误！\");\n     }\n     else {\n       //设置session\n        await this.session('sessionKey', username);\n        return this.success(200, \"登录成功！\");\n     }\n  }\n  //用户注册和更改用户资料\n  async userAction(){\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('user');\n    const id = this.get(\"id\");\n\n    if (isPut) {\n      const data = this.post();\n      data.password =  think.md5(data.password);\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      data.password =  think.md5(data.password);\n      // this.json(data)\n      const isUser = await model.where({username: data.username}).find();\n        if (JSON.stringify(isUser) != \"{}\"){\n          return this.fail(1001, \"注册失败！该用户已经存在\");\n        }else {\n          const rows = await model.add(data);\n          return this.success({ affectedRows: rows });\n        }\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete()\n      return this.success({ affectedRows: rows });\n    }\n  }\n  //上传文件\n  async upfileAction(){\n    var file = this.file(\"file\")\n    var filePath = \"baby/\" + think.uuid(\"v4\") + \".jpg\";\n    var upload = ossStream.upload({\n      Bucket: 'server-19860911',\n      Key: filePath\n    });\n    var read = fs.createReadStream(file.path);\n    read.pipe(upload);\n    var _this = this\n    //传成功\n    var p = await new Promise((resolve,reject)=>{\n        upload.on('uploaded', function (details) {\n           console.log('details:', details);\n           resolve(details)\n         });\n     }).then(function(details){\n           _this.json(details);\n     })\n     //传失败\n     upload.on('error', function (error) {\n       console.log('error:', error);\n     });\n  }\n\n  //Evaluation 评测主体\n  async evaluationAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('evaluation');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete()\n      //级联删除\n      const rows2 = await this.model('question').where({ question_id: id }).update({ question_id: 0 })\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      const data = await model.select()\n      return this.json(data);\n    }\n  }\n\n  //question\n  async questionAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('question');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete();\n      //级联删除\n      const rows2 = await this.model('options').where({ question_id: id }).delete();\n      // const rows3 = await this.model('user_answer').where({ question_id: id }).delete();\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      const data = await model.select();\n      return this.json(data);\n    }\n  }\n  //options\n  async optionsAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('options');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete()\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      const data = await model.select()\n      return this.json(data);\n    }\n  }\n  //Answer\n  async answerAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('answer');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete()\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      const data = await model.select()\n      return this.json(data);\n    }\n  }\n\n  //e_task_flows\n  async task_flowsAction(){\n    //创建一个测试\n    const isPost = this.isMethod('POST');\n    const isGet = this.isMethod('GET');\n    const model = this.model('task_flows');\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    //查询某个用户的所有测试 参数 user_id\n    if (isGet) {\n      const data = await model.where({user_id: this.get(\"user_id\")}).select()\n      return this.json(data);\n    }\n  }\n\n  //e_user_answer 回答一个问题\n  async user_answerAction(){\n    const isPost = this.isMethod('POST');\n    const model = this.model('user_answer');\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n  }\n  //e_user_answers 批量回答多个问题\n  async user_answersAction(){\n    const isPost = this.isMethod('POST');\n    const model = this.model('user_answer');\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.addMany([data]);\n      return this.success({ affectedRows: rows });\n    }\n  }\n\n  //获取 openid\n  async openid(code){\n    let appid = \"wx7a794dc3cc2dfaa6\";\n    let secret = \"1697d5ecf2f7b3a62b4f9f51e2a17c58\"; //小程序的 app secret\n    var url = \"https://api.weixin.qq.com/sns/jscode2session?appid=\" + appid\n    + \"&secret=\"+secret\n    + \"&js_code=\"+code\n    + \"&grant_type=authorization_code\";\n    var openid = await new Promise((resolve,reject)=>{\n        request(url,function(error,response,body){\n            if(!error && response.statusCode == 200){\n                //输出返回的内容\n                console.log(\"======\"+body);\n                var rt = JSON.parse(body)\n                if (rt.openid != undefined) {\n                  resolve(rt.openid);\n                }else {\n                  resolve(rt);\n                }\n            }else {\n              reject();\n            }\n        });\n      });\n      return openid;\n  }\n  //微信登录\n   async wxloginAction(){\n      let js_code = this.get(\"code\"); //登录时获取的 code\n      var openid = await this.openid(js_code);\n      console.log(\"======________\"+openid);\n      if (typeof(openid) == \"object\") {\n        return this.fail(300, \"获取openid失败！ code:-->\" + JSON.stringify(openid));\n      }\n      else {\n        const model = this.model('user');\n        const user = await model.where({wid: openid}).find();\n          if (JSON.stringify(user) != \"{}\"){ //存在\n            return this.success(user);\n          } else { //不存在user\n            const rows = await model.add({wid:openid});\n            return this.success({ affectedRows: rows });\n          }\n      }\n    }\n};\n"
    ]
}