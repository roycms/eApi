{
    "version": 3,
    "sources": [
        "../../../src/controller/api/v1.js"
    ],
    "names": [
        "Base",
        "require",
        "request",
        "fs",
        "ALY",
        "ossStream",
        "OSS",
        "accessKeyId",
        "secretAccessKey",
        "endpoint",
        "apiVersion",
        "wx_api",
        "wx_appid",
        "wx_secret",
        "module",
        "exports",
        "indexAction",
        "json",
        "code",
        "loginAction",
        "username",
        "post",
        "password",
        "undefined",
        "fail",
        "passwordMd5Val",
        "think",
        "md5",
        "user",
        "model",
        "data",
        "where",
        "is_admin",
        "find",
        "JSON",
        "stringify",
        "session",
        "success",
        "webLoginAction",
        "task_flows",
        "user_id",
        "id",
        "order",
        "task_flows_id",
        "userAction",
        "isGet",
        "isMethod",
        "isPut",
        "isPost",
        "isDelete",
        "get",
        "rows",
        "update",
        "isUser",
        "add",
        "affectedRows",
        "delete",
        "upfileAction",
        "file",
        "filePath",
        "uuid",
        "upload",
        "Bucket",
        "Key",
        "read",
        "createReadStream",
        "path",
        "pipe",
        "_this",
        "p",
        "Promise",
        "resolve",
        "reject",
        "on",
        "details",
        "console",
        "log",
        "then",
        "error",
        "analysisAction",
        "select",
        "evaluationAction",
        "rows2",
        "question_id",
        "evaluation_id",
        "questionAction",
        "optionsAction",
        "answerAction",
        "task_flowsAction",
        "user_answerAction",
        "user_answersAction",
        "status",
        "analysis_id",
        "rs",
        "parse",
        "i",
        "len",
        "length",
        "question",
        "max_scores",
        "evaluation",
        "addMany",
        "openid",
        "url",
        "response",
        "body",
        "statusCode",
        "rt",
        "wxloginAction",
        "js_code",
        "wid",
        "smsCodeAction",
        "phone",
        "options",
        "uri",
        "method",
        "smsLoginAction",
        "phoneNum",
        "rtsAction",
        "evaluations",
        "r",
        "maxScore",
        "maxItm",
        "scores",
        "sum",
        "push",
        "rts"
    ],
    "mappings": "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",
    "file": "../../../src/controller/api/v1.js",
    "sourcesContent": [
        "const Base = require('../base.js');\n//网络请求模块\nvar request = require('request');\n//阿里云\nvar fs = require(\"fs\");\nvar ALY = require('aliyun-sdk');\nvar ossStream = require('aliyun-oss-upload-stream')(new ALY.OSS({\n  accessKeyId: 'yIgRvLsyxFB3JEJH',\n  secretAccessKey: 'X7wyFWIw76cLb4cLNDa8Z2YNmHtIOu',\n  endpoint: 'http://oss-cn-beijing.aliyuncs.com',\n  apiVersion: '2013-10-15'\n}));\n//微信小程序\nvar wx_api = \"https://api.weixin.qq.com/sns/jscode2session\";\nvar wx_appid = \"wx7a794dc3cc2dfaa6\";\nvar wx_secret = \"1697d5ecf2f7b3a62b4f9f51e2a17c58\"; //小程序的 app secret\n\n\nmodule.exports = class extends Base {\n\n  indexAction() {\n    return this.json({code:200});\n  }\n  //登录\n  async loginAction() {\n     const username = this.post('username');\n     const password = this.post('password');\n     if (username == undefined || password == undefined) {\n       return this.fail(300, \"参数错误\");\n     }\n     const passwordMd5Val = think.md5(password);\n     const user = this.model('user');\n     const data = await user.where({\n       username: username,\n       password: passwordMd5Val,\n       is_admin:1\n     }).find();\n     // this.json(data)\n     if (JSON.stringify(data) == \"{}\"){\n        await this.session('sessionKey', null);\n        return this.fail(300, \"账户名或者密码错误！\");\n     }\n     else {\n       //设置session\n        await this.session('sessionKey', username);\n        return this.success(200, \"登录成功！\");\n     }\n  }\n  async webLoginAction() {\n     const username = this.post('username');\n     const password = this.post('password');\n     if (username == undefined || password == undefined) {\n       return this.fail(300, \"参数错误\");\n     }\n     const passwordMd5Val = think.md5(password);\n     const user = this.model('user');\n     var data = await user.where({\n       username: username,\n       password: passwordMd5Val\n     }).find();\n     // this.json(data)\n     if (JSON.stringify(data) == \"{}\"){\n        await this.session('sessionKey', null);\n        return this.fail(300, \"账户名或者密码错误！\");\n     }\n     else {\n       var task_flows = await this.model('task_flows').where({user_id: data.id}).order('id DESC').find()  //e_task_flows\n       data.task_flows_id = task_flows.id;\n       //设置session\n        await this.session('sessionKey', username);\n        return this.json(data);\n     }\n  }\n  //用户注册和更改用户资料\n  async userAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('user');\n    const id = this.get(\"id\");\n\n    if (isGet){\n      const user = await model.where({id: id }).find();\n      return this.success(user);\n    }\n    if (isPut) {\n      const data = this.post();\n      if (data.password != null) {\n        data.password =  think.md5(data.password);\n      }\n      const rows = await model.where({ id: id }).update(data);\n      const user = await model.where({id: id }).find();\n      return this.success(user);\n    }\n    if (isPost) {\n      const data = this.post();\n      data.password =  think.md5(data.password);\n      // this.json(data)\n      const isUser = await model.where({username: data.username}).find();\n        if (JSON.stringify(isUser) != \"{}\"){\n          return this.fail(1001, \"注册失败！该用户已经存在\");\n        }else {\n          const rows = await model.add(data);\n          return this.success({ affectedRows: rows });\n        }\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete()\n      return this.success({ affectedRows: rows });\n    }\n  }\n  //上传文件\n  async upfileAction(){\n    var file = this.file(\"file\")\n    var filePath = \"baby/\" + think.uuid(\"v4\") + \".jpg\";\n    var upload = ossStream.upload({\n      Bucket: 'server-19860911',\n      Key: filePath\n    });\n    var read = fs.createReadStream(file.path);\n    read.pipe(upload);\n    var _this = this\n    //传成功\n    var p = await new Promise((resolve,reject)=>{\n        upload.on('uploaded', function (details) {\n           console.log('details:', details);\n           resolve(details)\n         });\n     }).then(function(details){\n           _this.json(details);\n     })\n     //传失败\n     upload.on('error', function (error) {\n       console.log('error:', error);\n     });\n  }\n\n  //analysis 评测主体\n  async analysisAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('analysis');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete()\n      //级联删除\n\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      const data = await model.select()\n      return this.json(data);\n    }\n  }\n  //Evaluation 评测主体\n  async evaluationAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('evaluation');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete()\n      //级联删除\n      const rows2 = await this.model('question').where({ question_id: id }).update({ question_id: 0 })\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      var evaluation_id = this.get(\"evaluation_id\");\n      if (evaluation_id != null) {\n        const data = await model.where({id:evaluation_id}).find()\n        return this.json(data);\n      }\n      else {\n        const data = await model.select()\n        return this.json(data);\n      }\n\n    }\n  }\n\n  //question\n  async questionAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('question');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete();\n      //级联删除\n      const rows2 = await this.model('options').where({ question_id: id }).delete();\n      // const rows3 = await this.model('user_answer').where({ question_id: id }).delete();\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      const data = await model.order('orderby ASC').select();\n      return this.json(data);\n    }\n  }\n  //options\n  async optionsAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('options');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete();\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      const data = await model.select();\n      return this.json(data);\n    }\n  }\n  //Answer\n  async answerAction(){\n    const isGet = this.isMethod('GET');\n    const isPut = this.isMethod('PUT');\n    const isPost = this.isMethod('POST');\n    const isDelete = this.isMethod('DELETE');\n    const model = this.model('answer');\n    const id = this.get(\"id\");\n    if (isPut) {\n      const data = this.post();\n      const rows = await model.where({ id: id }).update(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    if (isDelete) {\n      const rows = await model.where({ id: id }).delete()\n      return this.success({ affectedRows: rows });\n    }\n    if (isGet) {\n      const data = await model.select()\n      return this.json(data);\n    }\n  }\n\n  //e_task_flows\n  async task_flowsAction(){\n    //创建一个测试\n    const isPost = this.isMethod('POST');\n    const isGet = this.isMethod('GET');\n    const model = this.model('task_flows');\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n    //查询某个用户的所有测试 参数 user_id\n    if (isGet) {\n      const data = await model.where({user_id: this.get(\"user_id\")}).select()  //e_task_flows\n      return this.json(data);\n    }\n  }\n\n  //e_user_answer 回答一个问题\n  async user_answerAction(){\n    const isPost = this.isMethod('POST');\n    const model = this.model('user_answer');\n    if (isPost) {\n      const data = this.post();\n      const rows = await model.add(data);\n      return this.success({ affectedRows: rows });\n    }\n  }\n  //e_user_answers 批量回答多个问题\n  async user_answersAction(){\n    const user_id = this.get('user_id');\n    const isPost = this.isMethod('POST');\n    const model = this.model('user_answer');\n    if (isPost) {\n      const task_flows_id = await this.model('task_flows').add({\n        user_id:user_id,\n        status:1\n      });\n      var analysis_id;\n      const data = this.post();\n      var rs = JSON.parse(data.data);\n      for(let i=0,len=rs.length;i<len;i++){\n        rs[i].task_flows_id = task_flows_id;\n        var question = await this.model('question').where({id:rs[i].question_id}).find();\n        rs[i].evaluation_id = question.evaluation_id;\n        rs[i].max_scores = question.max_scores;\n        var evaluation = await this.model('evaluation').where({id:rs[i].evaluation_id}).find();\n        rs[i].analysis_id = evaluation.analysis_id;\n        analysis_id = evaluation.analysis_id;\n      }\n      const rows = await model.addMany(rs);\n      //统计是什么类型的\n\n      return this.success({ task_flows_id: task_flows_id });\n    }\n  }\n\n  //获取 openid\n  async openid(code){\n    var url = wx_api\n    + \"?appid=\" + wx_appid\n    + \"&secret=\" + wx_secret\n    + \"&js_code=\" + code\n    + \"&grant_type=authorization_code\";\n    var openid = await new Promise((resolve,reject)=>{\n        request(url,function(error,response,body){\n            if(!error && response.statusCode == 200){\n                //输出返回的内容\n                console.log(\"======\"+body);\n                var rt = JSON.parse(body)\n                if (rt.openid != undefined) {\n                  resolve(rt.openid);\n                }else {\n                  resolve(rt);\n                }\n            }else {\n              reject();\n            }\n        });\n      });\n      return openid;\n  }\n  //微信登录\n   async wxloginAction(){\n      let js_code = this.get(\"code\"); //登录时获取的 code\n      var openid = await this.openid(js_code);\n      console.log(\"======________\"+openid);\n      if (typeof(openid) == \"object\") {\n        return this.fail(300, \"获取openid失败！ code:-->\" + JSON.stringify(openid));\n      }\n      else {\n        const model = this.model('user');\n        const user = await model.where({wid: openid}).find();\n          if (JSON.stringify(user) != \"{}\"){ //存在\n            return this.success(user);\n          } else { //不存在user\n            const rows = await model.add({wid:openid});\n            return this.success({ affectedRows: rows });\n          }\n      }\n    }\n\n    //短信接口\n    async smsCodeAction(){\n      let phone = this.get(\"phone\"); //登录时获取的 code\n\n      var options = {\n          uri: 'http://180.76.110.67:5880/template/add',\n          method: 'POST',\n          json: {\n            \"username\":\"h2-bjsf\",//用户账号\n            \"password\":\"h2-bjsf\",//密码\n            \"content\":\"您好,本次您的验证码${2}\"//模板内容\n          }\n        };\n        request(options,function(error, response, body) {\n            if (!error && response.statusCode == 200) {\n                //输出返回的内容\n                console.log(\"======\"+JSON.stringify(body));\n                console.log(\"======\"+body);\n              }\n            });\n      await this.session(phone, 'smsCode');\n    }\n    async smsLoginAction(){\n      let phoneNum = this.post(\"phone\");\n      let code = this.post(\"code\");\n      if (this.session(phoneNum) == code) {\n        const model = this.model('user');\n        const user = await model.where({phone: phoneNum}).find();\n          if (JSON.stringify(user) != \"{}\"){ //存在\n            return this.success(user);\n          } else { //不存在user\n            const rows = await model.add({phone: phoneNum});\n            return this.success({ affectedRows: rows });\n          }\n      }\n    }\n\n    async rtsAction(){\n\n      var analysis_id = this.get(\"analysis_id\");\n      var task_flows_id = this.get(\"task_flows_id\");\n\n        // var evaluationIds = await this.model('evaluation').where({analysis_id:analysis_id}).getField('id');\n        var evaluations = await this.model('evaluation').where({analysis_id:analysis_id}).select();\n        var r = [];\n        // var sumScores = [];\n        var maxScore = 0;\n        var maxItm = evaluations[0];\n        maxItm.scores = 0;\n        for(let i=0,len=evaluations.length;i<len;i++){\n          var scores = await this.model('user_answer').where({\n              task_flows_id:task_flows_id,\n              analysis_id:analysis_id,\n              evaluation_id:evaluations[i].id\n            }).sum(\"scores\");\n            var max_scores = await this.model('user_answer').where({\n                task_flows_id:task_flows_id,\n                analysis_id:analysis_id,\n                evaluation_id:evaluations[i].id\n              }).sum(\"max_scores\");\n\n            if (maxScore < scores){\n              maxItm = evaluations[i];\n              maxScore = scores;\n              maxItm.scores = maxScore; //得分\n              maxItm.max_scores = max_scores; //满分\n            }\n\n            evaluations[i].scores = maxScore; //得分\n            evaluations[i].max_scores = max_scores; //满分\n            r.push(evaluations[i]);\n          }\n\n          maxItm.rts = JSON.stringify(r);\n          maxItm.rts = JSON.parse(maxItm.rts);\n          console.log(\"++++\" + JSON.stringify(maxItm));\n          return this.json(maxItm);\n    }\n\n};\n"
    ]
}